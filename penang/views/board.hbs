<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/daisyui@3.2.1/dist/full.css" rel="stylesheet" type="text/css" />
    {{!-- tailwind CSS를 사용하기 위한 import --}}
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                }
            }
        }
    </script>
    {{!-- Swiper를 사용하기 위한 import --}}
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css" />
    <script>
        // localStorage에 현재 dark mode를 활성화시킨 상태인지 아닌지 정보를 저장해둠
        if (
            localStorage.getItem('color-theme') === 'dark' ||
            (!('color-theme' in localStorage) &&
                window.matchMedia('(prefers-color-scheme: dark)').matches)
        ) {
            document.documentElement.classList.add('dark');
        } else {
            document.documentElement.classList.remove('dark');
        }
    </script>
    {{!-- queryString으로 전달받은 boardId를 확인하기 위한 부분 --}}
    <title>{{boardId}} 번의 게시글</title>
</head>

<body class="dark:bg-gray-900">
    {{> header}}
    <div class="dark:bg-gray-900">
        <div class="h-[40rem] mx-16 border-2 rounded-3xl overflow-hidden">
            <img class="object-fill w-full h-full" src={{thumbnailUrl}} alt="미리보기" />
        </div>
        <div class="w-3/4 mx-auto mt-8 font-black text-center text-6xl dark:text-white">
            {{title}}
        </div>
        <div class="w-1/2 mx-auto mt-8 text-center text-[1.3rem] dark:text-white">
            {{summary}}
        </div>
        <div class="w-1/2 mx-auto mt-10 flex justify-center dark:text-white">
            <div class="font-bold truncate">
                {{author}}
            </div>
            <div>
                &nbsp;&nbsp;|&nbsp;&nbsp;
            </div>
            <div class="truncate">
                {{createdDate}}
            </div>
            <div>
                &nbsp;&nbsp;|&nbsp;&nbsp;
            </div>
            <button onclick="" class="dark:text-white">
                댓글 남기기
            </button>
        </div>
        <div class="w-1/2 mx-auto mt-10 dark:text-white">
            {{content}}
        </div>
        <div class="w-1/2 h-[30rem] mx-auto mt-5 border-2 overflow-hidden">
            <img class="object-fill w-full h-full" src={{imgUrl}} alt="미리보기" />
        </div>
        {{> footer}}
    </div>
    <hr class="my-10 border-0 h-1 bg-gray-200" />
    <div class="font-bold w-3/4 mt-3 mx-auto text-2xl dark:text-white">Shop</div>
    {{!-- 카테고리도 템플릿화해야되는지 잘 모르겠어서.. 일단 피그마대로 5개만 짰습니다. --}}
    {{> category}}
    <div class="relative">
        <div class="swiper shopSwiper w-3/4">
            <div class="swiper-wrapper">
                {{!-- 서버에서 받은 shopData 정보를 토대로 화면을 구성하되, shop.hbs를 따로 빼냈음 --}}
                {{!-- 왜냐하면 shop의 경우 메인 페이지 뿐만 아니라 board의 상세 페이지에서도 보여지기 때문에 자주 중복된다고 생각했기 때문 --}}
                {{#each shopData}}
                {{> shop}}
                {{/each}}
            </div>
        </div>
        <div class="swiper-button-next text-gray-600 absolute bottom-1/2 right-4 md:right-12 dark:text-white"></div>
        <div class="swiper-button-prev text-gray-600 absolute bottom-1/2 left-4 md:left-12 dark:text-white"></div>
    </div>
    <div class="w-1/4 md:w-1/6 mx-auto">
        <button
            class="w-full font-bold bg-black text-white text-sm md:text-md rounded-3xl text-center px-3 md:px-10 py-3 dark:text-black dark:bg-white mb-5">Shop
            상품
            더보기</button>
    </div>
    <!-- Swiper JS import -->
    <script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>

    <!-- Swiper 환경 설정 -->
    <script>
        var swiper = new Swiper(".shopSwiper", {
            slidesPerView: 4,
            spaceBetween: 0,
            pagination: {
                el: ".swiper-pagination",
                clickable: true,
            },
            navigation: {
                nextEl: ".swiper-button-next",
                prevEl: ".swiper-button-prev",
            },
        });
    </script>
    <script>
        var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
        var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

        // Change the icons inside the button based on previous settings
        if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            themeToggleLightIcon.classList.remove('hidden');
        } else {
            themeToggleDarkIcon.classList.remove('hidden');
        }

        var themeToggleBtn = document.getElementById('theme-toggle');

        themeToggleBtn.addEventListener('click', function () {

            // toggle icons inside button
            themeToggleDarkIcon.classList.toggle('hidden');
            themeToggleLightIcon.classList.toggle('hidden');

            // if set via local storage previously
            if (localStorage.getItem('color-theme')) {
                if (localStorage.getItem('color-theme') === 'light') {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('color-theme', 'dark');
                } else {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('color-theme', 'light');
                }

                // if NOT set via local storage previously
            } else {
                if (document.documentElement.classList.contains('dark')) {
                    document.documentElement.classList.remove('dark');
                    localStorage.setItem('color-theme', 'light');
                } else {
                    document.documentElement.classList.add('dark');
                    localStorage.setItem('color-theme', 'dark');
                }
            }
        });
    </script>
</body>

</html>